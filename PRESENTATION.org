* Get stuff - npm, binaries (including Windows), homebrew all available.

** Official docs:

  https://github.com/purescript/documentation

** Official recommended tooling is Pulp/Bower and the purescript compiler purs.

   I did not use them. We're gonna use spago today:

  https://github.com/spacchetti/spago

** Editor tooling available for atom, VSCode, vim, emacs, etc

* Purescript

** A small-ish Haskell-like ML family language that compiles to readable JavaScript

*** I'm going to assume you know and love Haskell, so here's how they are similar

**** System F Ï‰ plus some stuff

**** Two semicolons for type annotations

*** Here's how they differ

**** Typeclass heirarchies different

**** Explicit forall

**** Row types

**** Strict evaluation

**** Nicer records

** An excellent playground for writing frontend architectures

  - Thermite - wrapper around react
  - Pux - slightly more principled wrapper around react
  - Comonad experiments by Phil Freeman
  - choco pie - a cycleJS like thing
  - et cetera

* Halogen

** A library for creating managed-state frontend applications

** (Theoretically) pluggable rendering engines (HTML, React?, iOS? android?)

** Maintained and used by slamdata

** Comparing to elm: Casually speaking - Halogen uses Free where elm (and redux) use something like CoFree
   
   You will notice they feel dual to each other as we go

** Following is a demo that mostly covers the halogen tutorial

   https://github.com/slamdata/purescript-halogen/tree/v4.0.0/docs/
